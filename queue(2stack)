#include <iostream>
#include <stack>
using namespace std;

class QueueUsingStacks {
private:
stack<int> stack1;
stack<int> stack2;

public:
    void enqueue(int item) {
        stack1.push(item);
    }

    int dequeue(){
        if (stack2.empty()) 
{
            while (!stack1.empty()) 
{
                stack2.push(stack1.top());
                stack1.pop();
}
}
        if (stack2.empty()) 
{
            cout<<"queue is empty"
}
        int item = stack2.top();
        stack2.pop();
        return item;
}

    bool isEmpty() 
{
        return stack1.empty() && stack2.empty();
}

    int size() 
{
        return stack1.size() + stack2.size();
}
};

int main() {
    QueueUsingStacks queue;
    queue.enqueue(1);
    queue.enqueue(2);
    queue.enqueue(3);
    
queue.dequeue() << endl; // 1
queue.dequeue() << endl; // 2
queue.size() << endl;    // 1
queue.dequeue() << endl; // 3

    return 0;
}
